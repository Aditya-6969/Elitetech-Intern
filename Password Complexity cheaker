import re

def assess_password_strength(password):
    # Length check
    length = len(password)
    
    # Criteria for checking different character types
    has_lower = bool(re.search(r'[a-z]', password))
    has_upper = bool(re.search(r'[A-Z]', password))
    has_number = bool(re.search(r'[0-9]', password))
    has_special = bool(re.search(r'[!@#$%^&*(),.?":{}|<>]', password))
    
    # Strength assessment
    if length < 6:
        return "Weak: Password is too short."
    
    # Password strength levels
    strength_level = 0
    if length >= 6:
        strength_level += 1
    if has_lower and has_upper:
        strength_level += 1
    if has_number:
        strength_level += 1
    if has_special:
        strength_level += 1
    
    # Feedback based on strength level
    if strength_level == 1:
        return "Weak: Try adding more variety in characters."
    elif strength_level == 2:
        return "Medium: Add more character types (numbers, special characters) for a stronger password."
    elif strength_level == 3:
        return "Strong: Adding more length or special characters can make it even stronger."
    else:
        return "Very Strong: This is a well-secured password."
password = input("Enter a password: ")
print(assess_password_strength(password))
